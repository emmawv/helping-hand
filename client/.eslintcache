[{"/Users/emmawv/ironhack/module-3/helping-hand/client/src/index.js":"1","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/App.js":"2","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/HomePage/HomePage.js":"3","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Layout/Navigation/Navbar.js":"4","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychList/PsychList.js":"5","/Users/emmawv/ironhack/module-3/helping-hand/client/src/service/psychologists.service.js":"6","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychList/PsychCard.js":"7","/Users/emmawv/ironhack/module-3/helping-hand/client/src/service/auth.service.js":"8","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/Login/Login.js":"9","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/SignUp/SignUp.js":"10","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychDetails/PsychDetails.js":"11","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychList/PsychListMap.js":"12","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychDetails/DetailsMap.js":"13","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/Profile/Profile.js":"14"},{"size":250,"mtime":1607803436568,"results":"15","hashOfConfig":"16"},{"size":1872,"mtime":1607968208721,"results":"17","hashOfConfig":"16"},{"size":1926,"mtime":1607776797908,"results":"18","hashOfConfig":"16"},{"size":3268,"mtime":1607967500420,"results":"19","hashOfConfig":"16"},{"size":3299,"mtime":1607944570123,"results":"20","hashOfConfig":"16"},{"size":353,"mtime":1607633092182,"results":"21","hashOfConfig":"16"},{"size":1704,"mtime":1607965280740,"results":"22","hashOfConfig":"16"},{"size":478,"mtime":1607937589645,"results":"23","hashOfConfig":"16"},{"size":2299,"mtime":1607941914220,"results":"24","hashOfConfig":"16"},{"size":3347,"mtime":1607941955633,"results":"25","hashOfConfig":"16"},{"size":4735,"mtime":1607965259895,"results":"26","hashOfConfig":"16"},{"size":2418,"mtime":1607941819801,"results":"27","hashOfConfig":"16"},{"size":1841,"mtime":1607965386813,"results":"28","hashOfConfig":"16"},{"size":294,"mtime":1607968656648,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"yfp2s7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emmawv/ironhack/module-3/helping-hand/client/src/index.js",[],["62","63"],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/App.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/HomePage/HomePage.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Layout/Navigation/Navbar.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychList/PsychList.js",["64"],"import React, { Component } from 'react'\nimport { Container, Row, Col, Accordion, Card, Button, Toast } from 'react-bootstrap'\n\nimport PsychService from './../../../service/psychologists.service'\nimport PsychCard from './PsychCard'\nimport MapContainer from './PsychListMap'\nimport './PsychList.css'\n\nclass PsychList extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            psych: [],\n            showModal: false\n        }\n        this.psychService = new PsychService()\n    }\n\n    componentDidMount = () => this.refreshPsych()\n\n    refreshPsych = () => {\n        this.psychService\n            .getAllPsych()\n            .then(res => {\n                this.setState({ psych: res.data })\n            })\n            .catch((err) => new Error(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n\n    render() {\n        return (\n            <>\n                <Container className='psych-page'>\n                    <Row>\n                        <Col xs={12}>\n                            <h1 className='title'>Listado de psicologos</h1>\n                            <hr />\n                        <Accordion>\n                            <Card>\n                                <Card.Header>\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                        Mostrar el mapa\n                                </Accordion.Toggle>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body style={{height: '350px'}}>\n                                            <MapContainer className='list-map' psych={this.state.psych}/>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            </Accordion>\n                        </Col>\n                        <Col xs={12}>\n                            <Row>\n                                {\n                                    this.state.psych.length ? this.state.psych.map(elm => {\n                                        return (\n\n                                            <>\n                                                <Col xs={12}>\n                                                    <PsychCard key={elm._id} psych={elm}/>\n                                                </Col>\n                                                <hr />\n                                            </>\n                                        )\n                                    }) : <p>Please wait...loading</p>\n                                }\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n\n                {/* <Toast\n                    style={{\n                        position: 'fixed',\n                        top: '8%',\n                        left: '35%',\n                    }}\n                    show={true} delay={3000} autohide>\n                    <Toast.Header>\n                        <strong>Log In was succesful!</strong>\n                    </Toast.Header>\n                </Toast> */}\n            </>\n        )\n    }\n}\n\nexport default PsychList","/Users/emmawv/ironhack/module-3/helping-hand/client/src/service/psychologists.service.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychList/PsychCard.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/service/auth.service.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/Login/Login.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/SignUp/SignUp.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychDetails/PsychDetails.js",[],"/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychList/PsychListMap.js",["65"],"import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react'\nimport { Link } from 'react-router-dom'\n\nconst mapStyles = {\n    width: '100%',\n    height: '350px'\n}\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,  // Hides or shows the InfoWindow\n        activeMarker: {},          // Shows the active marker upon click\n        selectedPlace: {},         // Shows the InfoWindow to the selected place upon a marker\n        psych: this.props.psych\n    };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Map\n                google={this.props.google}\n                zoom={8}\n                style={mapStyles}\n                initialCenter={{ lat: 40.364728375, lng: -3.4563729 }}\n            >\n                {this.state.psych.map(elm => {\n                    return (\n                        <Marker\n                            position={{ lat: elm.practice.location.coordinates[0], lng: elm.practice.location.coordinates[1] }}\n                            onClick={this.onMarkerClick}\n                            name={elm.name}\n                            surname={elm.surname}\n                            image={elm.profileImg}\n                        />\n                    )\n                })}\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    onClose={this.onClose}>\n                    <div className='marker'>\n                        <img src={this.state.selectedPlace.image} alt='chosen psychologist' />\n                        <div>\n                            {this.state.selectedPlace.name} <br />\n                            {this.state.selectedPlace.surname}\n                        </div>\n                    </div>\n                </InfoWindow>\n\n            </Map >\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: API_KEY\n})(MapContainer)","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/PsychDetails/DetailsMap.js",["66"],"import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react'\n\nimport './PsychDetails.css'\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%'\n}\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,  // Hides or shows the InfoWindow\n        activeMarker: {},          // Shows the active marker upon click\n        selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\n    };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    render() {\n        return (\n            <aside className='map'>\n                <section>\n                <Map\n                    bootstrapURLKeys={{\n                        key: process.env.REACT_APP_GOOGLE_KEY,\n                    }}\n                    google={this.props.google}\n                    zoom={10}\n                    style={mapStyles}\n                    initialCenter={{ lat: this.props.psych.practice.location.coordinates[0], lng: this.props.psych.practice.location.coordinates[1] }}\n                >\n                    <Marker position={{ lat: this.props.psych.practice.location.coordinates[0], lng: this.props.psych.practice.location.coordinates[1] }}/>\n                    </Map >\n                </section>\n                <p> {this.props.address} </p>\n            </aside>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: API_KEY\n})(MapContainer)","/Users/emmawv/ironhack/module-3/helping-hand/client/src/components/Pages/Profile/Profile.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":56,"nodeType":"73","messageId":"74","endLine":2,"endColumn":61},{"ruleId":"71","severity":1,"message":"75","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":2,"column":41,"nodeType":"73","messageId":"74","endLine":2,"endColumn":51},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Toast' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'InfoWindow' is defined but never used.","no-global-assign","no-unsafe-negation"]